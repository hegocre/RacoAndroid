import org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    //id 'com.google.devtools.ksp' version "$ksp_version"
    id 'org.jetbrains.kotlin.kapt'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
}

def apiKeyPropertiesFile = rootProject.file("apikey.properties")
def apiKeyProperties = new Properties()
apiKeyProperties.load(new FileInputStream(apiKeyPropertiesFile))

android {
    namespace 'com.yara.raco'
    compileSdk 34

    defaultConfig {
        applicationId "com.yara.raco"
        minSdk 26
        targetSdk 34
        versionCode 32
        versionName "1.0.6"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        resourceConfigurations += ['ca', 'es', 'en']


        buildConfigField("String", "CLIENT_ID", apiKeyProperties['CLIENT_ID'])
        buildConfigField("String", "CLIENT_SECRET", apiKeyProperties['CLIENT_SECRET'])

        applicationVariants.configureEach { variant ->
            variant.resValue "string", "version_name", variant.versionName
            variant.resValue "string", "version_code", variant.versionCode.toString()
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    //Android dependencies
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    //Compose dependencies
    implementation platform('androidx.compose:compose-bom:2023.08.00')
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation 'androidx.compose.material:material-icons-extended'
    implementation 'androidx.compose.material3:material3'

    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.navigation:navigation-compose:2.7.2'

    //Room dependencies
    implementation "androidx.room:room-ktx:$room_version"
    //annotationProcessor "androidx.room:room-compiler:$room_version"
    //ksp "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation 'com.google.accompanist:accompanist-swiperefresh:0.30.1'

    implementation 'androidx.work:work-runtime-ktx:2.8.1'

    implementation 'com.squareup.okhttp3:okhttp:4.11.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0'

    //Debug and test implementations
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    implementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
}

// Compiler flag to use experimental Compose APIs
tasks.withType(KotlinCompilationTask).configureEach {
    compilerOptions {
        freeCompilerArgs.addAll("-opt-in=kotlin.RequiresOptIn", "-Xjvm-default=all-compatibility")
    }
}